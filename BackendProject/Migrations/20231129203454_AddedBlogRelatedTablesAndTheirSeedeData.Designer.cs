// <auto-generated />
using System;
using BackendProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BackendProject.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231129203454_AddedBlogRelatedTablesAndTheirSeedeData")]
    partial class AddedBlogRelatedTablesAndTheirSeedeData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BackendProject.Models.Advert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DirectionId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("DirectionId");

                    b.ToTable("Adverts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2810),
                            Description = "<h1 class=\"white\"><span>Gifts</span>Christmas</h1>",
                            DirectionId = 1,
                            Image = "1.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2810),
                            Description = "<h2 class=\"black\"><span class=\"small\">Save <span class=\"red\">25%</span></span><span class=\"red\">Offer</span> Christmas</h2>",
                            DirectionId = 2,
                            Image = "2.jpg",
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("BackendProject.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2017, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney Colleg Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and goingthrough the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. Thisbook is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.",
                            SoftDeleted = false,
                            Title = "If you are going to use a passage latin at Hampdun."
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2020, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Contrary to popular belief, Lorem Ipsum is not simply random text. It has roots in a piece of classical Latin literature from 45 BC, making it over 2000 years old. Richard McClintock, a Latin professor at Hampden-Sydney Colleg Virginia, looked up one of the more obscure Latin words, consectetur, from a Lorem Ipsum passage, and goingthrough the cites of the word in classical literature, discovered the undoubtable source. Lorem Ipsum comes from sections 1.10.32 and 1.10.33 of \"de Finibus Bonorum et Malorum\" (The Extremes of Good and Evil) by Cicero, written in 45 BC. Thisbook is a treatise on the theory of ethics, very popular during the Renaissance. The first line of Lorem Ipsum, \"Lorem ipsum dolor sit amet..\", comes from a line in section 1.10.32.",
                            SoftDeleted = false,
                            Title = "If you are going to use a passage latin at Hampdun."
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2018, 12, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "The standard chunk of Lorem Ipsum used since the 1500s is reproduced below for those interested. Sections 1.10.32 and 1.10.33 from de Finibus Bonorum et Malorum by Cicero are also reproduced in their exact original form, accompanied by English versions from the 1914 translation by H. Rackham.",
                            SoftDeleted = false,
                            Title = "If you are going to use a passage latin at Hampdun."
                        });
                });

            modelBuilder.Entity("BackendProject.Models.BlogImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("BlogImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3060),
                            Image = "1.jpg",
                            IsMain = true,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3060),
                            Image = "2.jpg",
                            IsMain = false,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3070),
                            Image = "3.jpg",
                            IsMain = false,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3070),
                            Image = "2.jpg",
                            IsMain = true,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            BlogId = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3070),
                            Image = "1.jpg",
                            IsMain = false,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            BlogId = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3080),
                            Image = "3.jpg",
                            IsMain = false,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            BlogId = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3080),
                            Image = "3.jpg",
                            IsMain = true,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            BlogId = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3080),
                            Image = "1.jpg",
                            IsMain = false,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 9,
                            BlogId = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3080),
                            Image = "2.jpg",
                            IsMain = false,
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("BackendProject.Models.BlogTag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BlogId")
                        .HasColumnType("int");

                    b.Property<int>("TagId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.HasIndex("TagId");

                    b.ToTable("BlogTags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BlogId = 1,
                            TagId = 1
                        },
                        new
                        {
                            Id = 2,
                            BlogId = 1,
                            TagId = 5
                        },
                        new
                        {
                            Id = 3,
                            BlogId = 1,
                            TagId = 6
                        },
                        new
                        {
                            Id = 4,
                            BlogId = 1,
                            TagId = 4
                        },
                        new
                        {
                            Id = 5,
                            BlogId = 2,
                            TagId = 1
                        },
                        new
                        {
                            Id = 6,
                            BlogId = 2,
                            TagId = 4
                        },
                        new
                        {
                            Id = 7,
                            BlogId = 2,
                            TagId = 3
                        },
                        new
                        {
                            Id = 8,
                            BlogId = 2,
                            TagId = 6
                        },
                        new
                        {
                            Id = 9,
                            BlogId = 3,
                            TagId = 1
                        },
                        new
                        {
                            Id = 10,
                            BlogId = 3,
                            TagId = 2
                        },
                        new
                        {
                            Id = 11,
                            BlogId = 3,
                            TagId = 5
                        },
                        new
                        {
                            Id = 12,
                            BlogId = 3,
                            TagId = 3
                        });
                });

            modelBuilder.Entity("BackendProject.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2870),
                            Name = "Decorations",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2870),
                            Name = "Outfits",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2880),
                            Name = "Candles",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2880),
                            Name = "Toys",
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("BackendProject.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2850),
                            FullName = "Betty More",
                            Image = "1.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2850),
                            FullName = "Andy Morgan",
                            Image = "1.jpg",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2850),
                            FullName = "Sandra Black",
                            Image = "1.jpg",
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("BackendProject.Models.Direction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Directions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "right"
                        },
                        new
                        {
                            Id = 2,
                            Name = "left"
                        });
                });

            modelBuilder.Entity("BackendProject.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2890),
                            Description = "Desc1",
                            Name = "Holiday Candle",
                            Price = 35m,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2900),
                            Description = "Desc1",
                            Name = "Christmas Tree",
                            Price = 40m,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2900),
                            Description = "Desc1",
                            Name = "Santa Claus Doll",
                            Price = 30m,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2910),
                            Description = "Desc1",
                            Name = "Holiday Cap",
                            Price = 50m,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2910),
                            Description = "Desc1",
                            Name = "Holiday Doll",
                            Price = 60m,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2910),
                            Description = "Desc1",
                            Name = "Holiday Candle",
                            Price = 30m,
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("BackendProject.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2930),
                            Image = "1.jpg",
                            IsMain = true,
                            ProductId = 1,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2930),
                            Image = "2.jpg",
                            IsMain = false,
                            ProductId = 1,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2940),
                            Image = "2.jpg",
                            IsMain = true,
                            ProductId = 2,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2940),
                            Image = "3.jpg",
                            IsMain = false,
                            ProductId = 2,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2940),
                            Image = "3.jpg",
                            IsMain = true,
                            ProductId = 3,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2940),
                            Image = "4.jpg",
                            IsMain = false,
                            ProductId = 3,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2950),
                            Image = "4.jpg",
                            IsMain = true,
                            ProductId = 4,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2950),
                            Image = "5.jpg",
                            IsMain = false,
                            ProductId = 4,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2950),
                            Image = "5.jpg",
                            IsMain = true,
                            ProductId = 5,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2950),
                            Image = "6.jpg",
                            IsMain = false,
                            ProductId = 5,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2960),
                            Image = "6.jpg",
                            IsMain = true,
                            ProductId = 6,
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2960),
                            Image = "2.jpg",
                            IsMain = false,
                            ProductId = 6,
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("BackendProject.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Reviews");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2830),
                            CustomerId = 1,
                            Message = "But I must explain to you how all this mistaken idea of denouncing pleasure and praising pain was born and I will give you a complete account of the system.",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2830),
                            CustomerId = 2,
                            Message = "I absolutely loved this product! It exceeded my expectations in every way. The quality is outstanding, and it arrived sooner than expected.",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2830),
                            CustomerId = 3,
                            Message = "Unfortunately, this item did not meet my expectations. The quality was subpar, and it didn't function as described. I'm quite disappointed with my purchase.",
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("BackendProject.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2980),
                            Key = "HeaderLogo",
                            SoftDeleted = false,
                            Value = "logo.png"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2980),
                            Key = "FooterLogo",
                            SoftDeleted = false,
                            Value = "footer-logo.png"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2980),
                            Key = "Address",
                            SoftDeleted = false,
                            Value = "ur address goes here,street Crossroad 123"
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2990),
                            Key = "Phone",
                            SoftDeleted = false,
                            Value = "+99 859 658 589 . +69 587 456 25"
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2990),
                            Key = "Eax",
                            SoftDeleted = false,
                            Value = "+55 784 7585 . + 985 698 586"
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2990),
                            Key = "Email",
                            SoftDeleted = false,
                            Value = "christ@email.com"
                        });
                });

            modelBuilder.Entity("BackendProject.Models.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Header")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sliders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2680),
                            Description = "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which.",
                            Header = "Save 25%",
                            Image = "1.jpg",
                            SoftDeleted = false,
                            Title = "Christmas Sale"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(2710),
                            Description = "There are many variations of passages of Lorem Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised words which.",
                            Header = "Save 25%",
                            Image = "2.jpg",
                            SoftDeleted = false,
                            Title = "Christmas Sale"
                        });
                });

            modelBuilder.Entity("BackendProject.Models.Subscribe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Subscribes");
                });

            modelBuilder.Entity("BackendProject.Models.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SoftDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3010),
                            Name = "Bestsellers",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3010),
                            Name = "Gifts",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3010),
                            Name = "New",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3010),
                            Name = "Christmas Gift",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3020),
                            Name = "Festive Cakes",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3020),
                            Name = "Home Decor",
                            SoftDeleted = false
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 11, 30, 0, 34, 54, 186, DateTimeKind.Local).AddTicks(3020),
                            Name = "Toys",
                            SoftDeleted = false
                        });
                });

            modelBuilder.Entity("BackendProject.Models.Advert", b =>
                {
                    b.HasOne("BackendProject.Models.Direction", "Direction")
                        .WithMany("Adverts")
                        .HasForeignKey("DirectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Direction");
                });

            modelBuilder.Entity("BackendProject.Models.BlogImage", b =>
                {
                    b.HasOne("BackendProject.Models.Blog", "Blog")
                        .WithMany("Images")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");
                });

            modelBuilder.Entity("BackendProject.Models.BlogTag", b =>
                {
                    b.HasOne("BackendProject.Models.Blog", "Blog")
                        .WithMany("BlogTags")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BackendProject.Models.Tag", "Tag")
                        .WithMany("BlogTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Blog");

                    b.Navigation("Tag");
                });

            modelBuilder.Entity("BackendProject.Models.Product", b =>
                {
                    b.HasOne("BackendProject.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("BackendProject.Models.ProductImage", b =>
                {
                    b.HasOne("BackendProject.Models.Product", "Product")
                        .WithMany("Images")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BackendProject.Models.Review", b =>
                {
                    b.HasOne("BackendProject.Models.Customer", "Customer")
                        .WithMany("Reviews")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("BackendProject.Models.Blog", b =>
                {
                    b.Navigation("BlogTags");

                    b.Navigation("Images");
                });

            modelBuilder.Entity("BackendProject.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BackendProject.Models.Customer", b =>
                {
                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("BackendProject.Models.Direction", b =>
                {
                    b.Navigation("Adverts");
                });

            modelBuilder.Entity("BackendProject.Models.Product", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("BackendProject.Models.Tag", b =>
                {
                    b.Navigation("BlogTags");
                });
#pragma warning restore 612, 618
        }
    }
}
